function sum = neuralGuess(weights, input)
	sum = 0;
	for i = 1:length(weights)
		sum += weights(i)*input(i);
	endfor
	return
endfunction

function ret = step(number)
	if(number>0)
		ret = 1;
		return
	endif

	ret = 0;
	return
endfunction

amount = input("Insert amout of bits to test\n")
weights = [];

for i = 1:amount+1
	weights = [weights, unifrnd(-1,1)];
endfor


learningRate = input("Insert learning rate\n")
tries = 0;
correct = 0;

while(true)
	input = [-1];
	for i = 1:amount
		input = [input, randi(2)-1];
	endfor

	input
	expected = validate(input(2:amount+1));
	guess = step(sum(times(weights, input)));

	deltaW = learningRate*(expected - guess)*input;
	weights += deltaW

	tries += 1;
	if(guess == expected) 
		correct += 1;
	endif
	ratio = correct/tries;
	printf("Ratio is %f\n", ratio)
	printf("Missed: %d\n",(tries - correct))
	pause(0.05)
endwhile